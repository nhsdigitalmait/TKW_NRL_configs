# NRLS validations ruleset
# NHS Interoperability Toolkit
#
# v1.0  April 2018		Chris Brown		
#
#  Module covers 
#  DMS Version ?
#  
#
# *****************************************************************************************

VALIDATION-RULESET-NAME FHIR NRLS Configuration Ruleset 
VALIDATION-RULESET-VERSION 1.1
VALIDATION-RULESET-TIMESTAMP August 2018
VALIDATION-RULESET-AUTHOR Chris Brown

#(remember to use 'VALIDATE-AS: SIMULATOR_LOG_REQUEST plus "/interactionID" in the messages to be validated)



# NRLS Query

#Validate NRLS Read
#VALIDATE urn:nhs:names:services:nrls:fhir:rest:read:documentreference
#
#CHECK sub validate_Request_Header
#CHECK sub validate_JWT
#CHECK sub validate_Absent_DocumentReference_resource


#Validate NRLS Search
VALIDATE urn:nhs:names:services:nrls:fhir:rest:search:documentreference

CHECK sub validate_Request_Header
CHECK sub validate_JWT
CHECK sub validate_Absent_DocumentReference_resource


#Validate NRLS Create
VALIDATE urn:nhs:names:services:nrls:fhir:rest:create:documentreference

CHECK sub validate_Request_Header
CHECK sub validate_JWT
CHECK sub validate_DocumentReference_resource

#VALIDATE NRLS Update
#VALIDATE urn:nhs:names:services:nrls:fhir:rest:update:documentreference
#
#CHECK sub validate_Request_Header
#CHECK sub validate_JWT
#CHECK sub validate_DocumentReference_resource



#VALIDATE NRLS Delete
VALIDATE urn:nhs:names:services:nrls:fhir:rest:delete:documentreference

CHECK sub validate_Request_Header
CHECK sub validate_JWT
CHECK sub validate_Absent_DocumentReference_resource


VALIDATE NRLS_Response

SUBSET validate_Request_Header

#################################################################
#Check contents of HTTP Request Header in this sub-routine
#################################################################

SET literal $Location VALIDATION_HTTP_OF_HEADERS

IF http_header Accept matches ^application/fhir\+xml$|^application/fhir\+json$
THEN
	CHECK http_header Accept matches ^application/fhir\+xml$|^application/fhir\+json$
	ANNOTATION "Accept http header valid value valid MIME-type"
ELSE
	IF http_header Accept matches ^application/xml\+fhir$|^application/json\+fhir$
	THEN
		CHECK http_header Accept matches ^application/xml\+fhir$|^application/json\+fhir$
		ANNOTATION "WARNING Accept http header valid  MIME-type is currently accepted (for backward compatibility DSTU2)"
	ELSE
		IF http_header Accept matches ^application/xml$|^application/json$|^text/json$ 
		THEN
			CHECK http_header Accept matches ^application/xml$|^application/json$|^text/json$
			ANNOTATION "WARNING Accept http header generic XML & JSON MIME-type is currently accepted"
		ELSE
		
		
			CHECK http_header Accept matches ^application/xml\+fhir$|^application/json\+fhir$|^application/fhir\+xml$|^application/fhir\+json$|^application/xml$|^application/json$|^text/json$
			ANNOTATION "Accept http header invalid value. Not one of application/fhir+xml, application/fhir+json, application/xml+fhir, application/json+fhir, application/xml, application/json or text/json"
		ENDIF
	ENDIF
ENDIF

#Authorizatiion
CHECK http_header Authorization matches ^.+$
ANNOTATION "Authorization is mandatory and holds the base64url encoded JSON web token required for audit on the spine"

IF http_header Authorization matches ^.+$
THEN
	CHECK http_header Authorization matches ^\S.*\.\S.*\.\s*$
	ANNOTATION "Authorization - the JWT must be three base64url encoded strings seperated by dots. The final section (signature) must be empty"
ENDIF

#fromASID
CHECK http_header fromASID matches ^[0-9]{12}$
ANNOTATION "fromASID httpheader well formed"

#toASID
CHECK http_header toASID matches ^[0-9]{12}$
ANNOTATION "toASID httpheader well formed"



SUBSET validate_JWT

#################################################################
#Check contents of Request JWT block in this sub-routine
#################################################################

SET literal $Location VALIDATION_OF_JWT

CHECK jwt_payload xpathexists /json:json/@iss
ANNOTATION "JWT issuer URI (iss) element is required"

CHECK jwt_payload xpathexists /json:json/@sub
ANNOTATION "JWT submitter URI (sub) element is required"

CHECK jwt_payload xpathexists /json:json/@aud
ANNOTATION "JWT requested resource URI (aud) element is required"

CHECK jwt_payload xpathmatches /json:json/@exp ^[0-9]{10}$
ANNOTATION "JWT expiry time (exp) element is required and must be valid"

CHECK jwt_payload xpathmatches /json:json/@iat ^[0-9]{10}$
ANNOTATION "JWT creation time (iat) element is required and must be valid"

# JWT EXPIRE Earlier Than CREATION (test moved down into IF when both dates are valid
#CHECK jwt_payload xpathequals boolean(/json:json/@exp < /json:json/@iat) false
#ANNOTATION "JWT creation time (iat) must be before JWT expiry date (exp)"


#JWT EXPIRE set correctly if CREATION and EXPIRE are present and valid.
IF jwt_payload xpathmatches /json:json/@exp ^[0-9]{10}$
THEN
	IF jwt_payload xpathmatches /json:json/@iat ^[0-9]{10}$
	THEN

		# JWT EXPIRE Earlier Than CREATION
		CHECK jwt_payload xpathequals boolean(/json:json/@exp < /json:json/@iat) false
		ANNOTATION "JWT creation time (iat) must be before JWT expiry date (exp)"
	
		CHECK jwt_payload xpathequals boolean(number(/json:json/@exp) - number(/json:json/@iat) = 300) true
		ANNOTATION "JWT creation time (iat) must be 300 seconds earlier than JWT expiry date (exp)"

		IF jwt_payload xpathequals boolean(number(/json:json/@exp) - number(/json:json/@iat) = 300) false
		THEN
			#JWT EXPIRE too soon.
			CHECK jwt_payload xpathequals boolean(number(/json:json/@exp) - number(/json:json/@iat) < 300) false
			ANNOTATION "JWT creation time (iat) must be 300 seconds earlier than JWT expiry date (exp)"
			#JWT EXPIRE too late 
			CHECK jwt_payload xpathequals boolean(number(/json:json/@exp) - number(/json:json/@iat) > 300) false
			ANNOTATION "JWT creation time (iat) must be 300 seconds earlier than JWT expiry date (exp)"
		ENDIF
		
	ENDIF
ENDIF		

# Validation against SPINE JWT documentation - currently not required
#CHECK jwt_payload xpathin /json:json/@reason_for_request directcare secondaryuses patientaccess
#ANNOTATION "JWT reason for request must be one of directcare secondaryuses or patientaccess"

# Validation against NRLS specific JWT documentation
CHECK jwt_payload xpathequals /json:json/@reason_for_request directcare 
ANNOTATION "JWT reason for request must be directcare"


#Scope 
#CHECK jwt_payload xpathin (tokenize(/json:json/@scope, "\s+"))  patient/*.read patient/*.write organization/*.read organization/*.write
#ANNOTATION "JWT data being requested (scope) must be an expected value or list of values")

CHECK jwt_payload xpathin (tokenize(/json:json/@scope, "\s+"))  patient/DocumentReference.read patient/DocumentReference.write
ANNOTATION "JWT data being requested (scope) must be an expected value or list of values")



#requesting_system. Check mandatory format and that the ASID code is present. 
CHECK jwt_payload xpathexists /json:json/@requesting_system
ANNOTATION "JWT Identifier for the system or device making the request(requesting_system) element is required"
CHECK jwt_payload xpathequals (substring-before(/json:json/@requesting_system, '|')) https://fhir.nhs.uk/Id/accredited-system
ANNOTATION "JWT Identifier for the Requesting System must in the format 'https://fhir.nhs.uk/Id/accredited-system|[ASID]"
CHECK jwt_payload xpathmatches (substring-after(/json:json/@requesting_system, '|')) ^[0-9]{12}$
ANNOTATION "JWT Identifier for the Requesting System must in the format 'https://fhir.nhs.uk/Id/accredited-system|[ASID]. Checking ASID present and format."


#requesting_organization (optional)> If present check mandatory format and that the ODS code is present. 
IF jwt_payload xpathexists /json:json/@requesting_organization
THEN
	CHECK jwt_payload xpathmatches /json:json/@requesting_organization ^.+$
	ANNOTATION "JWT Identifier for the Organisation making the request (requesting_organization) is present. Check contents."
	CHECK jwt_payload xpathequals (substring-before(/json:json/@requesting_organization, '|')) https://fhir.nhs.uk/Id/ods-organization-code
	ANNOTATION "JWT Identifier for the Organisation making the request must in the format 'https://fhir.nhs.uk/Id/ods-organization-code|[ODS code]"
	CHECK jwt_payload xpathmatches (substring-after(/json:json/@requesting_organization, '|')) ^.+$
	ANNOTATION "JWT Identifier for the Organisation making the request must in the format 'https://fhir.nhs.uk/Id/ods-organization-code|[ODS code]. Checking ODS code present."
ENDIF


#requesting_user (optional)
IF jwt_payload xpathexists /json:json/@requesting_user
THEN
	CHECK jwt_payload xpathmatches /json:json/@requesting_user ^.+$
	ANNOTATION "JWT Identifier for the Health or Social Care professional making the request(requesting_user). If present the User identifier is required"
ENDIF


#requesting_patient (optional)
IF jwt_payload xpathexists /json:json/@requesting_patient
THEN
	CHECK jwt_payload xpathmatches /json:json/@requesting_patient ^.+$
	ANNOTATION "JWT Identifier for the citizen making the request (requesting_patient). If present the NHS Number is required"
	CHECK jwt_payload xpathequals (substring-before(/json:json/@requesting_patient, '|')) http://fhir.nhs.net/Id/nhs-number
	ANNOTATION "JWT Identifier for the Organisation making the request must in the format 'http://fhir.nhs.net/Id/nhs-number|[NHS Number]"
	CHECK jwt_payload xpathmatches (substring-after(/json:json/@requesting_patient, '|')) ^[0-9]{10}$
	ANNOTATION "JWT Identifier for the Organisation making the request must in the format 'http://fhir.nhs.net/Id/nhs-number|[NHS Number]. Checking NHS Number present and format."
ENDIF



#JWT sub will match either requesting_user, requesting_patient or requesting_system 
CHECK jwt_payload xpathequals boolean((/json:json/@sub=/json:json/@requesting_user) or (/json:json/@sub=/json:json/@requesting_patient) or (/json:json/@sub=/json:json/@requesting_system))  true
ANNOTATION "JWT sub will match either requesting_user, requesting_patient or requesting_system"






SUBSET validate_DocumentReference_resource

################################################################################
#Check contents of Request DocumentReference FHIR Resourse in this sub-routine
################################################################################

SET literal $Location VALIDATION_OF_DOCUMENTREFERENCE_RESOURCE

###
#Schema Check on whole message
CHECK schema E:/_TEST/NRLS_SCHEMA/TKW/contrib/DMS_Schema/STU3/documentreference.xsd
ANNOTATION "Schema check"
#####


CHECK xslt E:/_TEST/NRLS_SCHEMA/TKW/contrib/Common/fhir/FHIR_NRLS_DocumentReference_1.xslt ERROR
ANNOTATION "Validating DocumentReference Resource"




SUBSET validate_Absent_DocumentReference_resource

################################################################################
#Check absence of Request DocumentReference FHIR Resourse in this sub-routine
################################################################################

SET literal $Location VALIDATION_OF_ABSENCE_OF_DOCUMENTREFERENCE_RESOURCE

CHECK xpathnotexists /fhir:DocumentReference
ANNOTATION "For this Action a DocumentReference FHIR Resource is not required"


SUBSET EndOfFile
